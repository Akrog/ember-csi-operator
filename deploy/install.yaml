apiVersion: v1
kind: Namespace
metadata:
  name: ember-csi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-controller-sa
  namespace: ember-csi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-node-sa
  namespace: ember-csi

---
# Create an SCC for OCP
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: ember-csi-scc
allowPrivilegedContainer: true
allowPrivilegeEscalation: true
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: false
allowHostPorts: false
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:ember-csi:csi-node-sa
- system:serviceaccount:ember-csi:csi-controller-sa
groups: []
volumes:
- configMap
- downwardAPI
- emptyDir
- hostPath
- nfs
- persistentVolumeClaim
- projected
- secret

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ember-csi-operator
  namespace: ember-csi
rules:
- apiGroups:
  - ember-csi.io
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - "*"
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - "*"
- apiGroups:
  - rbac
  resources:
  - clusterrole
  - clusterrolebinding
  verbs:
  - "*"

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ember-csi-operator-rb
  namespace: ember-csi
subjects:
- kind: ServiceAccount
  name: csi-controller-sa
roleRef:
  kind: Role
  name: ember-csi-operator
  apiGroup: rbac.authorization.k8s.io

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ember-csi-controller-cr
  namespace: ember-csi
rules:
  - apiGroups: ['ember-csi.io']
    resources: ['*']
    verbs: ['*']
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['list', 'create']
  - apiGroups: ['']
    resources: ['persistentvolumes']
    verbs: ['create', 'delete', 'get', 'list', 'watch', 'update']
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['persistentvolumeclaims']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['']
    resources: ['nodes']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['storage.k8s.io']
    resources: ['volumeattachments']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['storage.k8s.io']
    resources: ['storageclasses']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['list', 'watch', 'create', 'update', 'patch']

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ember-csi-controller-rb
  namespace: ember-csi
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: ember-csi-controller-cr
subjects:
- kind: ServiceAccount
  name: csi-controller-sa
  namespace: ember-csi

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ember-csi-node-cr
  namespace: ember-csi
rules:
  - apiGroups: ['ember-csi.io']
    resources: ['*']
    verbs: ['*']
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['list', 'create']
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ember-csi-node-rb
  namespace: ember-csi
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: ember-csi-node-cr
subjects:
- kind: ServiceAccount
  name: csi-node-sa
  namespace: ember-csi

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: embercsis.ember-csi.io
  namespace: ember-csi
spec:
  group: ember-csi.io
  names:
    kind: EmberCSI
    listKind: EmberCSIList
    plural: embercsis
    singular: embercsi
  scope: Namespaced
  version: v1alpha1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ember-csi-operator
  namespace: ember-csi
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ember-csi-operator
  template:
    metadata:
      labels:
        name: ember-csi-operator
    spec:
      serviceAccount: csi-controller-sa
      containers:
        - name: ember-csi-operator
          image: quay.io/kirankt/ember-csi-operator:v0.0.2
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - ember-csi-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "ember-csi-operator"
